Pathfinding algorithm sources
http://www.policyalmanac.org/games/aStarTutorial.htm
http://blog.two-cats.com/2014/06/a-star-example/
https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm & https://en.wikipedia.org/wiki/A*_search_algorithm
http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html
https://github.com/BlueRaja/High-Speed-Priority-Queue-for-C-Sharp PRIORITY QUEUE

https://qiao.github.io/PathFinding.js/visual/

C# documentation, case specific solutions
https://msdn.microsoft.com/en-us/library/
http://stackoverflow.com/

history log #4
now without alterating the iterated list. no idea how the error never showed up before testing on extremely large grids.
added methods to test it performance wise - looking pretty good.

history log #3
officially works correctly. tried to leave as many notes as possible. now to implement the complete reader.
the first issue was progressing only from the fetched list instead of all the open nodes, effectively making it a fancy Best-First-Search.
the second one was mis-calculating the G value when checking an already open node.

history log #2
got the algorithm to work, except im not really sure whats causing program to output the not-optimal-path (see current output).
Program.readMap creates an array based on file name and info that will be displayed above the grid and read before handing the rest. I created this quickly to test inputs easily.
the rest of the current Program class is just testing. i think ill work next on reading / writing levels since i've already started.

history log #1
what you're looking at is a wip a* pathfinding algorithm which is dijkstra but implements estimation of remaining distance
I still have the running function and the recursive search function to implement, finish the GetNearbyNodes function and
catch exceptions such as leaving grid aswell as making sure everything is working as intended (rounding corners comes to mind)

